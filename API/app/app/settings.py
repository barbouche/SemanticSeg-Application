"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""


import os
import re
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ee&7+e7%ag$)53r140n_wmg2fz^2fu%jtz+llzp(uuymvv#(7g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
if DEBUG:
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS =['localhost','127.0.0.1','3.17.24.39','172.31.34.116','ec2-3-17-24-39.us-east-2.compute.amazonaws.com']
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True

APPEND_SLASH = False
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django.contrib.humanize',
    'django.contrib.gis',
    'modeltranslation',
    'rest_framework',
    'rest_framework_gis',
    # 'rest_framework_docs',
    # 'rest_framework_swagger',
    'drf_yasg',
    'rest_framework.authtoken',
    'oauth2_provider',
    'corsheaders',
    'mapwidgets',
    'certbot_django',
    'django_user_agents',
    'fcm_django',
    'django_extensions',
    'social_django',
    'paypal.standard.ipn',
    'nvidia'
]

MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',    # This must be first on the list
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',

    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware', # This must be last
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.i18n',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',

            ],
        },
    },
]
#
WSGI_APPLICATION = 'app.wsgi.application'

DATABASES = {
# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

   'default': {
       'ENGINE': 'django.contrib.gis.db.backends.postgis',
       'NAME': 'project',
       'USER': 'project',
       'PASSWORD': 'Pr0JecT',
       'HOST': 'postgresql',
       'PORT': '5432',
   }
}

CACHES = {
    'default': {
        'BACKEND': 'redis_cache.RedisCache',
        'LOCATION': 'redis:6379',
        'TIMEOUT': 60,
    },
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

AUTHENTICATION_BACKENDS = (
    # 'social_core.backends.google.GoogleOAuth2',
    'rest_framework.authentication.SessionAuthentication',
    'rest_framework.authentication.TokenAuthentication',
    'django.contrib.auth.backends.ModelBackend',
)

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.TemplateHTMLRenderer',
    ),
    
    #'DEFAULT_METADATA_CLASS': 'dashboard.metadata.Metadata'
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


    # python manage.py collectstatic # to collect static
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),

)


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ee&7+e7%ag$)53r140n_wmg2fz^2fu%jtz+llzp(uuymvv#(7g'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django.security.DisallowedHost': {
            'handlers': ['mail_admins'],
            'level': 'CRITICAL',
            'propagate': False,
        },
    },
}


CACHE_TTL = 60 * 15


MEDIA_URL = '/'
MEDIA_ROOT = os.path.join(BASE_DIR, "")
# MEDIA_TEMP_DIR = os.path.join(MEDIA_ROOT,'temp/')
#MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media")

LOGIN_URL = '/signin/'


USER_AGENTS_CACHE = 'default'


#CORS_ORIGIN_ALLOW_ALL = True#DEBUG
#CORS_ORIGIN_WHITELIST = ('*',)

# CORS
CORS_ORIGIN_ALLOW_ALL = True#DEBUG
CORS_ORIGIN_WHITELIST = ALLOWED_HOSTS


ADMINS = (
    ('Ahmed Barbouche', 'ahmed.barbouche1@gmail.com'),
)


IGNORABLE_404_URLS = (
    re.compile(r'\.(php|cgi).*$'),
    re.compile(r'^/phpmyadmin/'),
    re.compile(r'^/.*\.(php|cgi|asp)$',flags=re.I),
    re.compile(r'^/apple-touch-icon.*\.png$'),
    re.compile(r'^/favicon\.ico$'),
    re.compile(r'^/robots\.txt$'),
    # re.compile(r'^/dashboard/ticket/.*'),
)


#if you want to set password you should
NOTEBOOK_ARGUMENTS = [
    # set password # from IPython.lib import passwd
   '--NotebookApp.password=sha1:6395407ca162:e7ffca18e1e9a19334875543a6ab155de1e456af',
    # exposes IP and port
    '--ip', '0.0.0.0',
    '--port', '8898',
    # allow root
    '--allow-root',
    # disables the browser
    '--no-browser',
    # work directory
    '--notebook-dir="/home/docker/app/notebooks/"',
]

TIME_ZONE='Africa/Casablanca'




PARAMETERS_MODEL = []


# TEMPLATE_CONTEXT_PROCESSORS = (
#     "django.contrib.auth.context_processors.auth",
#     "django.core.context_processors.debug",
#     "django.core.context_processors.i18n",
#     "django.core.context_processors.media",
#     "django.core.context_processors.static",
#     "django.core.context_processors.tz",
#     "django.contrib.messages.context_processors.messages",
#     "nvidia.models_manager.ModelsManager",
#     "scripts.init.modelManager"
# )